#region License
// Copyright (c) 2014 Tim Fischer
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the 'Software'), to deal in the Software without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following
// conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
#endregion
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Koden.Utils {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Koden.Utils.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection string must be passed to the constructor.
        /// </summary>
        internal static string AConnectionStringMustBePassedToTheConstructor {
            get {
                return ResourceManager.GetString("AConnectionStringMustBePassedToTheConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Byte[] value greater than 20megs are not supported.
        /// </summary>
        internal static string ByteValueGreaterThan20megsAreNotSupported {
            get {
                return ResourceManager.GetString("ByteValueGreaterThan20megsAreNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Configuration method is no longer supported. Use a Provider configuration instead..
        /// </summary>
        internal static string ConfigurationMethodNoLongerSupported {
            get {
                return ResourceManager.GetString("ConfigurationMethodNoLongerSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataReader passed to DataReaderToObject cannot be closed.
        /// </summary>
        internal static string DataReaderPassedToDataReaderToObjectCannot {
            get {
                return ResourceManager.GetString("DataReaderPassedToDataReaderToObjectCannot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Connection String.
        /// </summary>
        internal static string InvalidConnectionString {
            get {
                return ResourceManager.GetString("InvalidConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Connection string name..
        /// </summary>
        internal static string InvalidConnectionStringName {
            get {
                return ResourceManager.GetString("InvalidConnectionStringName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hex digit: .
        /// </summary>
        internal static string InvalidHexDigit {
            get {
                return ResourceManager.GetString("InvalidHexDigit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hex string length: {0}.
        /// </summary>
        internal static string InvalidHexStringLength {
            get {
                return ResourceManager.GetString("InvalidHexStringLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type for XmlType to .NET Type conversion..
        /// </summary>
        internal static string InvalidTypeForXmlTypeToNETTypeConversion {
            get {
                return ResourceManager.GetString("InvalidTypeForXmlTypeToNETTypeConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type Conversion not handled in StringToTypedValue for .
        /// </summary>
        internal static string StringToTypedValueValueTypeConversionFailed {
            get {
                return ResourceManager.GetString("StringToTypedValueValueTypeConversionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read configuration string from Sql Server field..
        /// </summary>
        internal static string UnableToExtractKeys {
            get {
                return ResourceManager.GetString("UnableToExtractKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read config information from string..
        /// </summary>
        internal static string UnableToReadConfigDataFromString {
            get {
                return ResourceManager.GetString("UnableToReadConfigDataFromString", resourceCulture);
            }
        }
    }
}
